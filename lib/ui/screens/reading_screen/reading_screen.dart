import 'dart:typed_data';import 'package:fl_chart/fl_chart.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:nfc_manager/nfc_manager.dart';import 'package:nfc_writer/core/constants/app_assets.dart';import 'package:nfc_writer/data/model/nfc_data.dart';import 'package:nfc_writer/ui/widgets/indicator.dart';import 'package:nfc_writer/util/context_extensions.dart';import 'package:url_launcher/url_launcher_string.dart';import 'reading_screen_mixin.dart';/// ReadingScreen ekranıclass ReadingScreen extends StatefulWidget {  /// ReadingScreen ekranı  const ReadingScreen({super.key});  @override  State<ReadingScreen> createState() => _ReadingScreenState();}class _ReadingScreenState extends State<ReadingScreen> with ReadingScreenMixin {  @override  Widget build(BuildContext context) {    return Scaffold(      body: SafeArea(        child: FutureBuilder<bool>(          future: NfcManager.instance.isAvailable(),          builder: (context, ss) => ss.data != true              ? Center(child: Text('NfcManager.isAvailable(): ${ss.data}'))              : Padding(                  padding: const EdgeInsets.all(8.0),                  child: SingleChildScrollView(                    child: ValueListenableBuilder<Ndef?>(                        valueListenable: result,                        builder: (context, value, _) {                          if (value == null) {                            return SizedBox(                                height: context.height,                                child: Center(                                    child: Image.asset(                                  AppAssets.scaningGif.value,                                  height: 150,                                )));                          }                          String serialNumber = value                              .additionalData['identifier']                              .map((e) => e.toRadixString(16).padLeft(2, '0'))                              .join(':');                          return Column(                            mainAxisSize: MainAxisSize.min,                            children: [                              ListTile(                                leading: Icon(Icons.key),                                title: Text('Seri Numarası:'),                                subtitle: Text(serialNumber),                              ),                              SizedBox(                                height: 30,                              ),                              Padding(                                padding: const EdgeInsets.all(4.0),                                child: Center(                                    child: Text(                                  'Bellek Durumu',                                  style: context.textTheme.titleLarge,                                )),                              ),                              Divider(),                              SizedBox(                                height: context.height * 0.3,                                child: Row(                                  children: [                                    Expanded(                                        child: Padding(                                      padding: const EdgeInsets.all(8.0),                                      child: AspectRatio(                                        aspectRatio: 1,                                        child: PieChart(                                          PieChartData(                                            pieTouchData: PieTouchData(                                              touchCallback:                                                  (FlTouchEvent event,                                                      pieTouchResponse) {                                                setState(() {                                                  if (!event                                                          .isInterestedForInteractions ||                                                      pieTouchResponse ==                                                          null ||                                                      pieTouchResponse                                                              .touchedSection ==                                                          null) {                                                    touchedIndex = -1;                                                    return;                                                  }                                                  touchedIndex =                                                      pieTouchResponse                                                          .touchedSection!                                                          .touchedSectionIndex;                                                });                                              },                                            ),                                            borderData: FlBorderData(                                              show: false,                                            ),                                            sectionsSpace: 1,                                            centerSpaceRadius: 40,                                            sections: showingSections(),                                          ),                                        ),                                      ),                                    )),                                    Column(                                      mainAxisAlignment: MainAxisAlignment.end,                                      crossAxisAlignment:                                          CrossAxisAlignment.start,                                      children: <Widget>[                                        Indicator(                                          color: Colors.green,                                          text:                                              'Boş Alan : ${value.maxSize - (value.cachedMessage?.byteLength ?? 0)} byte',                                          isSquare: true,                                        ),                                        SizedBox(                                          height: 4,                                        ),                                        Indicator(                                          color: Colors.grey,                                          text:                                              'Dolu Alan : ${value.cachedMessage?.byteLength ?? 0} byte',                                          isSquare: true,                                        ),                                        SizedBox(                                          height: 4,                                        ),                                        Indicator(                                          color: Colors.blue,                                          text:                                              'Toplam Boyut : ${value.maxSize} byte',                                          isSquare: true,                                        ),                                      ],                                    ),                                  ],                                ),                              ),                              Padding(                                padding: const EdgeInsets.all(8.0),                                child: Container(                                  decoration: BoxDecoration(                                    border: Border.all(color: Colors.grey),                                    borderRadius: BorderRadius.circular(8),                                  ),                                  child: ListTile(                                    title: Text(                                      value.isWritable                                          ? 'Bu karta veri yazılabilir'                                          : 'Bu karta veri yazılamaz',                                    ),                                    leading: Icon(                                      value.isWritable                                          ? Icons.check                                          : Icons.close,                                      color: value.isWritable                                          ? Colors.green                                          : Colors.red,                                    ),                                  ),                                ),                              ),                              SizedBox(                                height: 30,                              ),                              Padding(                                padding: const EdgeInsets.all(8.0),                                child: Center(                                    child: Text(                                  'Veriler',                                  style: context.textTheme.titleLarge,                                )),                              ),                              Divider(),                              ListView.builder(                                  shrinkWrap: true,                                  physics: const NeverScrollableScrollPhysics(),                                  itemCount:                                      value.cachedMessage?.records.length ?? 0,                                  itemBuilder: (context, index) {                                    final record = value.cachedMessage                                        ?.records[index] as NdefRecord?;                                    if (record == null) return const SizedBox();                                    print(record.typeNameFormat);                                    if (record.typeNameFormat ==                                        NdefTypeNameFormat.nfcWellknown) {                                      print(record                                          .payload);                                      return Column(                                        mainAxisSize: MainAxisSize.min,                                        children: [                                          ListTile(                                            title: Text('URL'),                                            subtitle: Text(                                              NdefRecord.URI_PREFIX_LIST[                                                      record.payload[0]] +                                                  String.fromCharCodes(record                                                      .payload                                                      .sublist(1)),                                            ),                                            trailing: Row(                                              mainAxisSize: MainAxisSize.min,                                              children: [                                                IconButton(                                                  icon: Icon(                                                      Icons.open_in_browser),                                                  onPressed: () {                                                    final url = NdefRecord                                                                .URI_PREFIX_LIST[                                                            record.payload[0]] +                                                        String.fromCharCodes(                                                            record.payload                                                                .sublist(1));                                                    print(url);                                                    launchUrlString(url);                                                  },                                                ),                                                IconButton(                                                  icon: Icon(Icons.copy),                                                  onPressed: () {                                                    final url = NdefRecord                                                                .URI_PREFIX_LIST[                                                            record.payload[0]] +                                                        String.fromCharCodes(                                                            record.payload                                                                .sublist(1));                                                    Clipboard.setData(                                                        ClipboardData(                                                            text: url));                                                  },                                                ),                                              ],                                            ),                                          ),                                          Divider(),                                        ],                                      );                                    }                                    if (record.typeNameFormat ==                                        NdefTypeNameFormat.media) {                                      return Column(                                        mainAxisSize: MainAxisSize.min,                                        children: [                                          ListTile(                                            title: Text(String.fromCharCodes(                                                record.type)),                                            leading: Icon(Icons.file_present),                                            subtitle: Text(                                              String.fromCharCodes(                                                  record.payload),                                            ),                                          ),                                          Divider(),                                        ],                                      );                                    }                                    return Column(                                      mainAxisSize: MainAxisSize.min,                                      children: [                                        ListTile(                                          title: Text(String.fromCharCodes(                                              record.type)),                                          subtitle: Text(                                            String.fromCharCodes(                                                record.payload.sublist(1)),                                          ),                                        ),                                        Divider(),                                      ],                                    );                                  }),                            ],                          );                        }),                  ),                ),        ),      ),    );  }}