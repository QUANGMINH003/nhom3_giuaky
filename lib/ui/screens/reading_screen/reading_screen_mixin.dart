import 'dart:io';import 'dart:typed_data';import 'package:fl_chart/fl_chart.dart';import 'package:flutter/material.dart';import 'package:nfc_manager/nfc_manager.dart';import 'reading_screen.dart';/// ReadingScreen mixin sınıfımixin ReadingScreenMixin on State<ReadingScreen> {  ValueNotifier<Ndef?> result = ValueNotifier(null);  int touchedIndex = -1;  @override  void initState() {    super.initState();    if (Platform.isAndroid) {      _tagRead();    }  }  @override  void dispose() {    super.dispose();    NfcManager.instance.stopSession();  }  void _tagRead() =>      NfcManager.instance.startSession(onDiscovered: (NfcTag tag) async {       result.value = Ndef.from(tag);      });  List<PieChartSectionData> showingSections() {    int max = result.value?.maxSize ?? 0;    int size = result.value?.cachedMessage?.byteLength ?? 0;    int free = max - size;    return List.generate(2, (i) {      final isTouched = i == touchedIndex;      final fontSize = isTouched ? 25.0 : 16.0;      final radius = isTouched ? 60.0 : 50.0;      switch (i) {        case 1:          return PieChartSectionData(            color: Colors.grey,            value: size.toDouble(),            title: '$size byte',            radius: radius,            titleStyle: TextStyle(              fontSize: fontSize,              color: Colors.black,            ),          );        case 0:          return PieChartSectionData(            color: Colors.green,            value: free.toDouble(),            title: '$free byte',            radius: radius,            titleStyle: TextStyle(              fontSize: fontSize,              color: Colors.black,            ),          );        default:          throw Error();      }    });  }}