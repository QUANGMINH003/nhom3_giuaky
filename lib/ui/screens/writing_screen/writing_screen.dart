import 'package:fl_chart/fl_chart.dart';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:nfc_manager/nfc_manager.dart';import 'package:nfc_writer/core/constants/app_assets.dart';import 'package:nfc_writer/ui/widgets/indicator.dart';import 'package:nfc_writer/util/context_extensions.dart';import 'package:url_launcher/url_launcher_string.dart';import 'writing_screen_mixin.dart';/// WritingScreen ekranıclass WritingScreen extends StatefulWidget {  /// WritingScreen ekranı  const WritingScreen({super.key});  @override  State<WritingScreen> createState() => _WritingScreenState();}class _WritingScreenState extends State<WritingScreen> with WritingScreenMixin {  @override  Widget build(BuildContext context) {    return Scaffold(      body: SafeArea(        child: FutureBuilder<bool>(          future: NfcManager.instance.isAvailable(),          builder: (context, ss) => ss.data != true              ? Center(child: Text('NfcManager.isAvailable(): ${ss.data}'))              : Padding(                  padding: const EdgeInsets.all(8.0),                  child: SingleChildScrollView(                    child: ValueListenableBuilder<NdefMessage>(                        valueListenable: result,                        builder: (context, value, _) {                          return Column(                            mainAxisSize: MainAxisSize.min,                            children: [                              if (value.records.isEmpty)                                SizedBox(                                    height: context.height * 0.3,                                    child: Center(                                      child: Text(                                        'NFC Etiketinize Yazmak İçin Veri Ekleyin',                                        style: context.textTheme.titleLarge,                                        textAlign: TextAlign.center,                                      ),                                    )),                              if (value.records.isNotEmpty)                                SizedBox(                                  height: 350,                                  child: Column(                                    children: [                                      Padding(                                        padding: const EdgeInsets.all(4.0),                                        child: Center(                                            child: Text(                                          'Yazılacak Veri Boyutu',                                          style: context.textTheme.titleLarge,                                        )),                                      ),                                      Divider(),                                      Expanded(                                          child: Padding(                                        padding: const EdgeInsets.all(8.0),                                        child: AspectRatio(                                          aspectRatio: 1,                                          child: PieChart(                                            PieChartData(                                              pieTouchData: PieTouchData(                                                touchCallback:                                                    (FlTouchEvent event,                                                        pieTouchResponse) {                                                  setState(() {                                                    if (!event                                                            .isInterestedForInteractions ||                                                        pieTouchResponse ==                                                            null ||                                                        pieTouchResponse                                                                .touchedSection ==                                                            null) {                                                      touchedIndex = -1;                                                      return;                                                    }                                                    touchedIndex =                                                        pieTouchResponse                                                            .touchedSection!                                                            .touchedSectionIndex;                                                  });                                                },                                              ),                                              borderData: FlBorderData(                                                show: false,                                              ),                                              sectionsSpace: 1,                                              centerSpaceRadius: 40,                                              sections: showingSections(),                                            ),                                          ),                                        ),                                      )),                                      Center(                                          child: Indicator(                                        color: Colors.grey,                                        text:                                            'Toplam Boyut : ${result.value.records.map((e) => e.payload.lengthInBytes).reduce((e, t) => e + t)} byte',                                        isSquare: true,                                      )),                                      Center(                                          child: ElevatedButton.icon(                                              icon: Icon(Icons.nfc),                                              onPressed: () async {                                                writeTag();                                              },                                              label: Text(                                                  'Yazma İşlemini Başlat'))),                                    ],                                  ),                                ),                              SizedBox(                                height: 30,                              ),                              ListView.builder(                                  shrinkWrap: true,                                  physics: const NeverScrollableScrollPhysics(),                                  itemCount: value?.records.length ?? 0,                                  itemBuilder: (context, index) {                                    final record =                                        value?.records[index] as NdefRecord?;                                    final size =                                        record?.payload.lengthInBytes ?? 0;                                    if (record == null) return const SizedBox();                                    if (record.typeNameFormat ==                                        NdefTypeNameFormat.nfcWellknown) {                                      return Column(                                        mainAxisSize: MainAxisSize.min,                                        children: [                                          ListTile(                                            title: Text('URL'),                                            leading: Column(                                              mainAxisSize: MainAxisSize.min,                                              children: [                                                Container(                                                  width: 30,                                                  height: 30,                                                  color: getColorFromSize(size),                                                ),                                                Text(                                                  size.toString() + ' byte',                                                  style: TextStyle(                                                    color: Colors.black,                                                    fontSize: 8,                                                  ),                                                ),                                              ],                                            ),                                            subtitle: Text(                                              NdefRecord.URI_PREFIX_LIST[                                                      record.payload[0]] +                                                  String.fromCharCodes(record                                                      .payload                                                      .sublist(1)),                                            ),                                            trailing: IconButton(                                              icon: Icon(Icons.delete_forever,                                                  color: Colors.red),                                              onPressed: () {                                                removeRecord(index);                                              },                                            ),                                          ),                                          Divider(),                                        ],                                      );                                    }                                    if (record.typeNameFormat ==                                        NdefTypeNameFormat.media) {                                      return Column(                                        mainAxisSize: MainAxisSize.min,                                        children: [                                          ListTile(                                            title: Text(String.fromCharCodes(                                                record.type)),                                            leading: Icon(Icons.file_present),                                            subtitle: Text(                                              String.fromCharCodes(                                                  record.payload),                                            ),                                            trailing: IconButton(                                              icon: Icon(Icons.delete_forever,                                                  color: Colors.red),                                              onPressed: () {                                                removeRecord(index);                                              },                                            ),                                          ),                                          Divider(),                                        ],                                      );                                    }                                    return Column(                                      mainAxisSize: MainAxisSize.min,                                      children: [                                        ListTile(                                          title: Text(String.fromCharCodes(                                              record.type)),                                          subtitle: Text(                                            String.fromCharCodes(                                                record.payload.sublist(1)),                                          ),                                          trailing: IconButton(                                            icon: Icon(Icons.delete_forever,                                                color: Colors.red),                                            onPressed: () {                                              removeRecord(index);                                            },                                          ),                                        ),                                        Divider(),                                      ],                                    );                                  }),                              Center(                                  child: ElevatedButton.icon(                                      icon: Icon(Icons.add),                                      onPressed: () async {                                        int type = -1;                                        await showModalBottomSheet(                                            context: context,                                            builder: (context) {                                              return Column(                                                children: [                                                  Padding(                                                    padding:                                                        const EdgeInsets.all(                                                            8.0),                                                    child: Center(                                                        child: Container(                                                      width: 50,                                                      height: 5,                                                      color: Colors.grey,                                                    )),                                                  ),                                                  Divider(),                                                  ListTile(                                                    title: Text('URL : http'),                                                    leading:                                                        const Icon(Icons.link),                                                    onTap: () {                                                      type = 3;                                                      Navigator.pop(context);                                                    },                                                  ),                                                  ListTile(                                                    title: Text('URL : https'),                                                    leading:                                                        const Icon(Icons.link),                                                    onTap: () {                                                      type = 4;                                                      Navigator.pop(context);                                                    },                                                  ),                                                  ListTile(                                                    title: Text(                                                        'Telefon Numarası'),                                                    leading:                                                        const Icon(Icons.phone),                                                    onTap: () {                                                      type = 5;                                                      Navigator.pop(context);                                                    },                                                  ),                                                  ListTile(                                                    title: Text('E-posta'),                                                    leading:                                                        const Icon(Icons.email),                                                    onTap: () {                                                      type = 6;                                                      Navigator.pop(context);                                                    },                                                  ),                                                  ListTile(                                                    title: Text('Metin'),                                                    leading: const Icon(                                                        Icons.text_fields),                                                    onTap: () {                                                      type = 0;                                                      Navigator.pop(context);                                                    },                                                  ),                                                ],                                              );                                            });                                        addRecordDialog(type);                                      },                                      label: Text('Veri Ekle'))),                            ],                          );                        }),                  ),                ),        ),      ),    );  }}