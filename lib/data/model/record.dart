import 'dart:typed_data';class Record{  int typeNameFormat;  List<int> type;  Uint8List? identifier;  Uint8List payload;  Record({    required this.typeNameFormat,    required this.type,    required this.identifier,    required this.payload,  });  factory Record.fromJson(Map<String, dynamic> json){    print(json);    int typeNameFormat = json['typeNameFormat'];    List<int> type = json['type'].cast<int>();    Uint8List identifier = Uint8List.fromList(json['identifier'].cast<int>());    Uint8List payload =  Uint8List.fromList(json['payload'].cast<int>());    return Record(      typeNameFormat: typeNameFormat,      type: type,      identifier: identifier,      payload: payload,    );  }  String get typeNameFormatString{    switch(typeNameFormat){      case 1:        return "NFC Forum well-known type";      case 2:        return "MIME media type";      case 3:        return "Absolute URI";      case 4:        return "NFC Forum external type";      default:        return "Unknown";    }  }  String get typeString{    return String.fromCharCodes(type);  }  String get payloadString{    return String.fromCharCodes(payload);  }}