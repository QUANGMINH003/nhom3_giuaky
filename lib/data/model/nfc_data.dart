import 'package:nfc_manager/nfc_manager.dart';import 'package:nfc_writer/data/model/record.dart';class NfcData {  // NFC thông tin  String? identifier;  int? sak;  int? maxTransceiveLength;  // Thông tin siêu nhẹ Mifare  int? type;  // NDEF thông tin  bool? isWritable;  int? maxSize;  List<NdefRecord>? records;  // Constructor  NfcData({    this.identifier,    this.sak,    this.maxTransceiveLength,    this.type,    this.isWritable,    this.maxSize,    this.records,  });  //phương thức fromJson  factory NfcData.fromJson(Map<String, dynamic> json) {    // Phân tích thông tin thẻ NFC    List<int>? identifier = json['nfca']?['identifier']?.cast<int>();    int? sak = json['nfca']?['sak'];    int? maxTransceiveLength = json['nfca']?['maxTransceiveLength'];    // Loại thẻ Mifare Ultralight    int? type = json['mifareultralight']?['type'];    // thông tin NDEF    bool? isWritable = json['ndef']?['isWritable'];    int? maxSize = json['ndef']?['maxSize'];    //phân tích thông điệp NDEF    List? records = json['ndef']?['cachedMessage']?['records'];    // Trả về đối tượng NfcData    return NfcData(      identifier:String.fromCharCodes(identifier??[]),      sak: sak,      maxTransceiveLength: maxTransceiveLength,      type: type,      isWritable: isWritable,      maxSize: maxSize,      records: null,    );  }  // Chức năng phụ trợ xác định loại thẻ  String getCardType() {    switch (type) {      case 1:        return "MIFARE Ultralight";      case 2:        return "MIFARE Ultralight C";      case 3:        return "MIFARE Ultralight EV1";      default:        return "Unknown Type";    }  }  // Chức năng in dữ liệu ra màn hình  void printDetails() {    print("NFC Card ID: $identifier");    print("Thing: $sak");    print("Max Transceive Length: $maxTransceiveLength");    print("Card Type: ${getCardType()}");    print("Can it be written?: ${isWritable ?? 'unknown'}");    print("Max Size: $maxSize bytes");    print("NDEF Message: $records");  }}